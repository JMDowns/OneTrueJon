name: ci
run-name: ${{ github.actor }} is testing the website
on: [push]

env: 
  AWS_REGION: us-east-2
  ECR_REPOSITORY: OneTrueJon
  SHORT_SHA: $(echo ${{ github.sha }} | cut -c 1-8)

jobs:
  test-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - run: bun install
      - run: bun run test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      # - name: Build, tag, and push the image to Amazon ECR
      #   id: build-image
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
      #     IMAGE_TAG: "latest"

      #   run: |
      #     # Build a docker container and push it to ECR 
      #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      #     echo "Pushing image to ECR..."
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #     echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Install and configure kubectl
        run: |
          VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
          curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
              --progress-bar \
              --location \
              --remote-name
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          echo ${{ secrets.KUBECONFIG }} | base64 --decode > kubeconfig.yaml

      - name: Deploy
        run: |
          kubectl delete -f deployment.yaml
          kubectl create -f deployment.yaml