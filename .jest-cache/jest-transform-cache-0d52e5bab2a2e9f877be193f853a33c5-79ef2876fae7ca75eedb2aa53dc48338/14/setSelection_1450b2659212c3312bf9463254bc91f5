87bb039441f516c29ddf2b10d390be4a
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
var UI = require('../../document/UI.js');
require('../../utils/click/isClickableInput.js');
require('../../utils/dataTransfer/Clipboard.js');
require('../../utils/edit/isEditable.js');
require('../../utils/edit/maxLength.js');
require('@testing-library/dom/dist/helpers.js');
require('../../utils/keyDef/readNextDescriptor.js');
require('../../utils/misc/level.js');
require('../../options.js');
var getTargetTypeAndSelection = require('./getTargetTypeAndSelection.js');

/**
 * Set the selection
 */
function setSelection({
  focusNode,
  focusOffset,
  anchorNode = focusNode,
  anchorOffset = focusOffset
}) {
  var _anchorNode_ownerDocument_getSelection, _anchorNode_ownerDocument;
  const typeAndSelection = getTargetTypeAndSelection.getTargetTypeAndSelection(focusNode);
  if (typeAndSelection.type === 'input') {
    return UI.setUISelection(focusNode, {
      anchorOffset,
      focusOffset
    });
  }
  (_anchorNode_ownerDocument = anchorNode.ownerDocument) === null || _anchorNode_ownerDocument === void 0 ? void 0 : (_anchorNode_ownerDocument_getSelection = _anchorNode_ownerDocument.getSelection()) === null || _anchorNode_ownerDocument_getSelection === void 0 ? void 0 : _anchorNode_ownerDocument_getSelection.setBaseAndExtent(anchorNode, anchorOffset, focusNode, focusOffset);
}
exports.setSelection = setSelection;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlVJIiwicmVxdWlyZSIsImdldFRhcmdldFR5cGVBbmRTZWxlY3Rpb24iLCJzZXRTZWxlY3Rpb24iLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsImFuY2hvck5vZGUiLCJhbmNob3JPZmZzZXQiLCJfYW5jaG9yTm9kZV9vd25lckRvY3VtZW50X2dldFNlbGVjdGlvbiIsIl9hbmNob3JOb2RlX293bmVyRG9jdW1lbnQiLCJ0eXBlQW5kU2VsZWN0aW9uIiwidHlwZSIsInNldFVJU2VsZWN0aW9uIiwib3duZXJEb2N1bWVudCIsImdldFNlbGVjdGlvbiIsInNldEJhc2VBbmRFeHRlbnQiXSwic291cmNlcyI6WyJzZXRTZWxlY3Rpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG52YXIgVUkgPSByZXF1aXJlKCcuLi8uLi9kb2N1bWVudC9VSS5qcycpO1xucmVxdWlyZSgnLi4vLi4vdXRpbHMvY2xpY2svaXNDbGlja2FibGVJbnB1dC5qcycpO1xucmVxdWlyZSgnLi4vLi4vdXRpbHMvZGF0YVRyYW5zZmVyL0NsaXBib2FyZC5qcycpO1xucmVxdWlyZSgnLi4vLi4vdXRpbHMvZWRpdC9pc0VkaXRhYmxlLmpzJyk7XG5yZXF1aXJlKCcuLi8uLi91dGlscy9lZGl0L21heExlbmd0aC5qcycpO1xucmVxdWlyZSgnQHRlc3RpbmctbGlicmFyeS9kb20vZGlzdC9oZWxwZXJzLmpzJyk7XG5yZXF1aXJlKCcuLi8uLi91dGlscy9rZXlEZWYvcmVhZE5leHREZXNjcmlwdG9yLmpzJyk7XG5yZXF1aXJlKCcuLi8uLi91dGlscy9taXNjL2xldmVsLmpzJyk7XG5yZXF1aXJlKCcuLi8uLi9vcHRpb25zLmpzJyk7XG52YXIgZ2V0VGFyZ2V0VHlwZUFuZFNlbGVjdGlvbiA9IHJlcXVpcmUoJy4vZ2V0VGFyZ2V0VHlwZUFuZFNlbGVjdGlvbi5qcycpO1xuXG4vKipcbiAqIFNldCB0aGUgc2VsZWN0aW9uXG4gKi8gZnVuY3Rpb24gc2V0U2VsZWN0aW9uKHsgZm9jdXNOb2RlLCBmb2N1c09mZnNldCwgYW5jaG9yTm9kZSA9IGZvY3VzTm9kZSwgYW5jaG9yT2Zmc2V0ID0gZm9jdXNPZmZzZXQgfSkge1xuICAgIHZhciBfYW5jaG9yTm9kZV9vd25lckRvY3VtZW50X2dldFNlbGVjdGlvbiwgX2FuY2hvck5vZGVfb3duZXJEb2N1bWVudDtcbiAgICBjb25zdCB0eXBlQW5kU2VsZWN0aW9uID0gZ2V0VGFyZ2V0VHlwZUFuZFNlbGVjdGlvbi5nZXRUYXJnZXRUeXBlQW5kU2VsZWN0aW9uKGZvY3VzTm9kZSk7XG4gICAgaWYgKHR5cGVBbmRTZWxlY3Rpb24udHlwZSA9PT0gJ2lucHV0Jykge1xuICAgICAgICByZXR1cm4gVUkuc2V0VUlTZWxlY3Rpb24oZm9jdXNOb2RlLCB7XG4gICAgICAgICAgICBhbmNob3JPZmZzZXQsXG4gICAgICAgICAgICBmb2N1c09mZnNldFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgKF9hbmNob3JOb2RlX293bmVyRG9jdW1lbnQgPSBhbmNob3JOb2RlLm93bmVyRG9jdW1lbnQpID09PSBudWxsIHx8IF9hbmNob3JOb2RlX293bmVyRG9jdW1lbnQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfYW5jaG9yTm9kZV9vd25lckRvY3VtZW50X2dldFNlbGVjdGlvbiA9IF9hbmNob3JOb2RlX293bmVyRG9jdW1lbnQuZ2V0U2VsZWN0aW9uKCkpID09PSBudWxsIHx8IF9hbmNob3JOb2RlX293bmVyRG9jdW1lbnRfZ2V0U2VsZWN0aW9uID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYW5jaG9yTm9kZV9vd25lckRvY3VtZW50X2dldFNlbGVjdGlvbi5zZXRCYXNlQW5kRXh0ZW50KGFuY2hvck5vZGUsIGFuY2hvck9mZnNldCwgZm9jdXNOb2RlLCBmb2N1c09mZnNldCk7XG59XG5cbmV4cG9ydHMuc2V0U2VsZWN0aW9uID0gc2V0U2VsZWN0aW9uO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUVaQSxNQUFNLENBQUNDLGNBQWMsQ0FBQ0MsT0FBTyxFQUFFLFlBQVksRUFBRTtFQUFFQyxLQUFLLEVBQUU7QUFBSyxDQUFDLENBQUM7QUFFN0QsSUFBSUMsRUFBRSxHQUFHQyxPQUFPLENBQUMsc0JBQXNCLENBQUM7QUFDeENBLE9BQU8sQ0FBQyx1Q0FBdUMsQ0FBQztBQUNoREEsT0FBTyxDQUFDLHVDQUF1QyxDQUFDO0FBQ2hEQSxPQUFPLENBQUMsZ0NBQWdDLENBQUM7QUFDekNBLE9BQU8sQ0FBQywrQkFBK0IsQ0FBQztBQUN4Q0EsT0FBTyxDQUFDLHNDQUFzQyxDQUFDO0FBQy9DQSxPQUFPLENBQUMsMENBQTBDLENBQUM7QUFDbkRBLE9BQU8sQ0FBQywyQkFBMkIsQ0FBQztBQUNwQ0EsT0FBTyxDQUFDLGtCQUFrQixDQUFDO0FBQzNCLElBQUlDLHlCQUF5QixHQUFHRCxPQUFPLENBQUMsZ0NBQWdDLENBQUM7O0FBRXpFO0FBQ0E7QUFDQTtBQUFJLFNBQVNFLFlBQVlBLENBQUM7RUFBRUMsU0FBUztFQUFFQyxXQUFXO0VBQUVDLFVBQVUsR0FBR0YsU0FBUztFQUFFRyxZQUFZLEdBQUdGO0FBQVksQ0FBQyxFQUFFO0VBQ3RHLElBQUlHLHNDQUFzQyxFQUFFQyx5QkFBeUI7RUFDckUsTUFBTUMsZ0JBQWdCLEdBQUdSLHlCQUF5QixDQUFDQSx5QkFBeUIsQ0FBQ0UsU0FBUyxDQUFDO0VBQ3ZGLElBQUlNLGdCQUFnQixDQUFDQyxJQUFJLEtBQUssT0FBTyxFQUFFO0lBQ25DLE9BQU9YLEVBQUUsQ0FBQ1ksY0FBYyxDQUFDUixTQUFTLEVBQUU7TUFDaENHLFlBQVk7TUFDWkY7SUFDSixDQUFDLENBQUM7RUFDTjtFQUNBLENBQUNJLHlCQUF5QixHQUFHSCxVQUFVLENBQUNPLGFBQWEsTUFBTSxJQUFJLElBQUlKLHlCQUF5QixLQUFLLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUNELHNDQUFzQyxHQUFHQyx5QkFBeUIsQ0FBQ0ssWUFBWSxDQUFDLENBQUMsTUFBTSxJQUFJLElBQUlOLHNDQUFzQyxLQUFLLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHQSxzQ0FBc0MsQ0FBQ08sZ0JBQWdCLENBQUNULFVBQVUsRUFBRUMsWUFBWSxFQUFFSCxTQUFTLEVBQUVDLFdBQVcsQ0FBQztBQUM3WDtBQUVBUCxPQUFPLENBQUNLLFlBQVksR0FBR0EsWUFBWSJ9