{"version":3,"names":["Object","defineProperty","exports","value","require","isContentEditable","selection","updateSelectionOnFocus","element","selection$1","ownerDocument","getSelection","focusNode","hasOwnSelection","contenteditable","getContentEditable","isCollapsed","_contenteditable_firstChild","firstChild","nodeType","setBaseAndExtent"],"sources":["updateSelectionOnFocus.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('../../utils/click/isClickableInput.js');\nrequire('../../utils/dataTransfer/Clipboard.js');\nvar isContentEditable = require('../../utils/edit/isContentEditable.js');\nrequire('../../utils/edit/isEditable.js');\nrequire('../../utils/edit/maxLength.js');\nrequire('@testing-library/dom/dist/helpers.js');\nvar selection = require('../../utils/focus/selection.js');\nrequire('../../utils/keyDef/readNextDescriptor.js');\nrequire('../../utils/misc/level.js');\nrequire('../../options.js');\n\n/**\n * Reset the Document Selection when moving focus into an element\n * with own selection implementation.\n */ function updateSelectionOnFocus(element) {\n    const selection$1 = element.ownerDocument.getSelection();\n    /* istanbul ignore if */ if (!(selection$1 === null || selection$1 === void 0 ? void 0 : selection$1.focusNode)) {\n        return;\n    }\n    // If the focus moves inside an element with own selection implementation,\n    // the document selection will be this element.\n    // But if the focused element is inside a contenteditable,\n    // 1) a collapsed selection will be retained.\n    // 2) other selections will be replaced by a cursor\n    //  2.a) at the start of the first child if it is a text node\n    //  2.b) at the start of the contenteditable.\n    if (selection.hasOwnSelection(element)) {\n        const contenteditable = isContentEditable.getContentEditable(selection$1.focusNode);\n        if (contenteditable) {\n            if (!selection$1.isCollapsed) {\n                var _contenteditable_firstChild;\n                const focusNode = ((_contenteditable_firstChild = contenteditable.firstChild) === null || _contenteditable_firstChild === void 0 ? void 0 : _contenteditable_firstChild.nodeType) === 3 ? contenteditable.firstChild : contenteditable;\n                selection$1.setBaseAndExtent(focusNode, 0, focusNode, 0);\n            }\n        } else {\n            selection$1.setBaseAndExtent(element, 0, element, 0);\n        }\n    }\n}\n\nexports.updateSelectionOnFocus = updateSelectionOnFocus;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7DC,OAAO,CAAC,uCAAuC,CAAC;AAChDA,OAAO,CAAC,uCAAuC,CAAC;AAChD,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,uCAAuC,CAAC;AACxEA,OAAO,CAAC,gCAAgC,CAAC;AACzCA,OAAO,CAAC,+BAA+B,CAAC;AACxCA,OAAO,CAAC,sCAAsC,CAAC;AAC/C,IAAIE,SAAS,GAAGF,OAAO,CAAC,gCAAgC,CAAC;AACzDA,OAAO,CAAC,0CAA0C,CAAC;AACnDA,OAAO,CAAC,2BAA2B,CAAC;AACpCA,OAAO,CAAC,kBAAkB,CAAC;;AAE3B;AACA;AACA;AACA;AAAI,SAASG,sBAAsBA,CAACC,OAAO,EAAE;EACzC,MAAMC,WAAW,GAAGD,OAAO,CAACE,aAAa,CAACC,YAAY,CAAC,CAAC;EACxD;EAAyB,IAAI,EAAEF,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,WAAW,CAACG,SAAS,CAAC,EAAE;IAC7G;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIN,SAAS,CAACO,eAAe,CAACL,OAAO,CAAC,EAAE;IACpC,MAAMM,eAAe,GAAGT,iBAAiB,CAACU,kBAAkB,CAACN,WAAW,CAACG,SAAS,CAAC;IACnF,IAAIE,eAAe,EAAE;MACjB,IAAI,CAACL,WAAW,CAACO,WAAW,EAAE;QAC1B,IAAIC,2BAA2B;QAC/B,MAAML,SAAS,GAAG,CAAC,CAACK,2BAA2B,GAAGH,eAAe,CAACI,UAAU,MAAM,IAAI,IAAID,2BAA2B,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,2BAA2B,CAACE,QAAQ,MAAM,CAAC,GAAGL,eAAe,CAACI,UAAU,GAAGJ,eAAe;QACtOL,WAAW,CAACW,gBAAgB,CAACR,SAAS,EAAE,CAAC,EAAEA,SAAS,EAAE,CAAC,CAAC;MAC5D;IACJ,CAAC,MAAM;MACHH,WAAW,CAACW,gBAAgB,CAACZ,OAAO,EAAE,CAAC,EAAEA,OAAO,EAAE,CAAC,CAAC;IACxD;EACJ;AACJ;AAEAN,OAAO,CAACK,sBAAsB,GAAGA,sBAAsB"}