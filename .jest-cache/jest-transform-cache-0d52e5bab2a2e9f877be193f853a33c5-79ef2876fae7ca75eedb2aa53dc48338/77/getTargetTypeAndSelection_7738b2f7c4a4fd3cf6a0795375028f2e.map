{"version":3,"names":["Object","defineProperty","exports","value","UI","require","isContentEditable","selection","getTargetTypeAndSelection","node","element","getElement","hasOwnSelection","type","getUISelection","selection$1","ownerDocument","getSelection","isCE","getContentEditable","anchorNode","nodeType","parentElement"],"sources":["getTargetTypeAndSelection.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar UI = require('../../document/UI.js');\nrequire('../../utils/click/isClickableInput.js');\nrequire('../../utils/dataTransfer/Clipboard.js');\nvar isContentEditable = require('../../utils/edit/isContentEditable.js');\nrequire('../../utils/edit/isEditable.js');\nrequire('../../utils/edit/maxLength.js');\nrequire('@testing-library/dom/dist/helpers.js');\nvar selection = require('../../utils/focus/selection.js');\nrequire('../../utils/keyDef/readNextDescriptor.js');\nrequire('../../utils/misc/level.js');\nrequire('../../options.js');\n\n/**\n * Determine which selection logic and selection ranges to consider.\n */ function getTargetTypeAndSelection(node) {\n    const element = getElement(node);\n    if (element && selection.hasOwnSelection(element)) {\n        return {\n            type: 'input',\n            selection: UI.getUISelection(element)\n        };\n    }\n    const selection$1 = element === null || element === void 0 ? void 0 : element.ownerDocument.getSelection();\n    // It is possible to extend a single-range selection into a contenteditable.\n    // This results in the range acting like a range outside of contenteditable.\n    const isCE = isContentEditable.getContentEditable(node) && (selection$1 === null || selection$1 === void 0 ? void 0 : selection$1.anchorNode) && isContentEditable.getContentEditable(selection$1.anchorNode);\n    return {\n        type: isCE ? 'contenteditable' : 'default',\n        selection: selection$1\n    };\n}\nfunction getElement(node) {\n    return node.nodeType === 1 ? node : node.parentElement;\n}\n\nexports.getTargetTypeAndSelection = getTargetTypeAndSelection;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,EAAE,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AACxCA,OAAO,CAAC,uCAAuC,CAAC;AAChDA,OAAO,CAAC,uCAAuC,CAAC;AAChD,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,uCAAuC,CAAC;AACxEA,OAAO,CAAC,gCAAgC,CAAC;AACzCA,OAAO,CAAC,+BAA+B,CAAC;AACxCA,OAAO,CAAC,sCAAsC,CAAC;AAC/C,IAAIE,SAAS,GAAGF,OAAO,CAAC,gCAAgC,CAAC;AACzDA,OAAO,CAAC,0CAA0C,CAAC;AACnDA,OAAO,CAAC,2BAA2B,CAAC;AACpCA,OAAO,CAAC,kBAAkB,CAAC;;AAE3B;AACA;AACA;AAAI,SAASG,yBAAyBA,CAACC,IAAI,EAAE;EACzC,MAAMC,OAAO,GAAGC,UAAU,CAACF,IAAI,CAAC;EAChC,IAAIC,OAAO,IAAIH,SAAS,CAACK,eAAe,CAACF,OAAO,CAAC,EAAE;IAC/C,OAAO;MACHG,IAAI,EAAE,OAAO;MACbN,SAAS,EAAEH,EAAE,CAACU,cAAc,CAACJ,OAAO;IACxC,CAAC;EACL;EACA,MAAMK,WAAW,GAAGL,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACM,aAAa,CAACC,YAAY,CAAC,CAAC;EAC1G;EACA;EACA,MAAMC,IAAI,GAAGZ,iBAAiB,CAACa,kBAAkB,CAACV,IAAI,CAAC,KAAKM,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,WAAW,CAACK,UAAU,CAAC,IAAId,iBAAiB,CAACa,kBAAkB,CAACJ,WAAW,CAACK,UAAU,CAAC;EAC7M,OAAO;IACHP,IAAI,EAAEK,IAAI,GAAG,iBAAiB,GAAG,SAAS;IAC1CX,SAAS,EAAEQ;EACf,CAAC;AACL;AACA,SAASJ,UAAUA,CAACF,IAAI,EAAE;EACtB,OAAOA,IAAI,CAACY,QAAQ,KAAK,CAAC,GAAGZ,IAAI,GAAGA,IAAI,CAACa,aAAa;AAC1D;AAEApB,OAAO,CAACM,yBAAyB,GAAGA,yBAAyB"}