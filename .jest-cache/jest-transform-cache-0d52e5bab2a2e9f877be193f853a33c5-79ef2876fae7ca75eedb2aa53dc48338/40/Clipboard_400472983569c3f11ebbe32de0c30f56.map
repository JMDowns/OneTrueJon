{"version":3,"names":["Object","defineProperty","exports","value","getWindow","require","Blob","DataTransfer","_define_property","obj","key","enumerable","configurable","writable","createClipboardItem","window","blobs","dataMap","fromEntries","map","b","type","Promise","resolve","ClipboardItem","types","Array","from","keys","data","getType","Error","constructor","d","ClipboardStubControl","Symbol","createClipboardStub","control","assign","Clipboard","EventTarget","read","items","readText","text","item","includes","find","t","startsWith","then","readBlobText","FileReader","write","writeText","args","isClipboardStub","clipboard","attachClipboardStubToView","navigator","realClipboard","getOwnPropertyDescriptor","stub","resetClipboardStub","detachClipboardStub","undefined","get","resetClipboardStubOnView","detachClipboardStubFromView","readDataTransferFromClipboard","document","defaultView","dt","createDataTransfer","setData","writeDataTransferToClipboard","clipboardData","i","length","dtItem","blob","getBlobFromDataTransferItem","push","written","g","globalThis","afterEach","afterAll"],"sources":["Clipboard.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar getWindow = require('../misc/getWindow.js');\nvar Blob = require('./Blob.js');\nvar DataTransfer = require('./DataTransfer.js');\n\n// Clipboard is not available in jsdom\nfunction _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n// MDN lists string|Blob|Promise<Blob|string> as possible types in ClipboardItemData\n// lib.dom.d.ts lists only Promise<Blob|string>\n// https://developer.mozilla.org/en-US/docs/Web/API/ClipboardItem/ClipboardItem#syntax\nfunction createClipboardItem(window, ...blobs) {\n    const dataMap = Object.fromEntries(blobs.map((b)=>[\n            typeof b === 'string' ? 'text/plain' : b.type,\n            Promise.resolve(b)\n        ]));\n    // use real ClipboardItem if available\n    /* istanbul ignore if */ if (typeof window.ClipboardItem !== 'undefined') {\n        return new window.ClipboardItem(dataMap);\n    }\n    return new class ClipboardItem {\n        get types() {\n            return Array.from(Object.keys(this.data));\n        }\n        async getType(type) {\n            const value = await this.data[type];\n            if (!value) {\n                throw new Error(`${type} is not one of the available MIME types on this item.`);\n            }\n            return value instanceof window.Blob ? value : new window.Blob([\n                value\n            ], {\n                type\n            });\n        }\n        constructor(d){\n            _define_property(this, \"data\", void 0);\n            this.data = d;\n        }\n    }(dataMap);\n}\nconst ClipboardStubControl = Symbol('Manage ClipboardSub');\nfunction createClipboardStub(window, control) {\n    return Object.assign(new class Clipboard extends window.EventTarget {\n        async read() {\n            return Array.from(this.items);\n        }\n        async readText() {\n            let text = '';\n            for (const item of this.items){\n                const type = item.types.includes('text/plain') ? 'text/plain' : item.types.find((t)=>t.startsWith('text/'));\n                if (type) {\n                    text += await item.getType(type).then((b)=>Blob.readBlobText(b, window.FileReader));\n                }\n            }\n            return text;\n        }\n        async write(data) {\n            this.items = data;\n        }\n        async writeText(text) {\n            this.items = [\n                createClipboardItem(window, text)\n            ];\n        }\n        constructor(...args){\n            super(...args);\n            _define_property(this, \"items\", []);\n        }\n    }(), {\n        [ClipboardStubControl]: control\n    });\n}\nfunction isClipboardStub(clipboard) {\n    return !!(clipboard === null || clipboard === void 0 ? void 0 : clipboard[ClipboardStubControl]);\n}\nfunction attachClipboardStubToView(window) {\n    if (isClipboardStub(window.navigator.clipboard)) {\n        return window.navigator.clipboard[ClipboardStubControl];\n    }\n    const realClipboard = Object.getOwnPropertyDescriptor(window.navigator, 'clipboard');\n    let stub;\n    const control = {\n        resetClipboardStub: ()=>{\n            stub = createClipboardStub(window, control);\n        },\n        detachClipboardStub: ()=>{\n            /* istanbul ignore if */ if (realClipboard) {\n                Object.defineProperty(window.navigator, 'clipboard', realClipboard);\n            } else {\n                Object.defineProperty(window.navigator, 'clipboard', {\n                    value: undefined,\n                    configurable: true\n                });\n            }\n        }\n    };\n    stub = createClipboardStub(window, control);\n    Object.defineProperty(window.navigator, 'clipboard', {\n        get: ()=>stub,\n        configurable: true\n    });\n    return stub[ClipboardStubControl];\n}\nfunction resetClipboardStubOnView(window) {\n    if (isClipboardStub(window.navigator.clipboard)) {\n        window.navigator.clipboard[ClipboardStubControl].resetClipboardStub();\n    }\n}\nfunction detachClipboardStubFromView(window) {\n    if (isClipboardStub(window.navigator.clipboard)) {\n        window.navigator.clipboard[ClipboardStubControl].detachClipboardStub();\n    }\n}\nasync function readDataTransferFromClipboard(document) {\n    const window = document.defaultView;\n    const clipboard = window === null || window === void 0 ? void 0 : window.navigator.clipboard;\n    const items = clipboard && await clipboard.read();\n    if (!items) {\n        throw new Error('The Clipboard API is unavailable.');\n    }\n    const dt = DataTransfer.createDataTransfer(window);\n    for (const item of items){\n        for (const type of item.types){\n            dt.setData(type, await item.getType(type).then((b)=>Blob.readBlobText(b, window.FileReader)));\n        }\n    }\n    return dt;\n}\nasync function writeDataTransferToClipboard(document, clipboardData) {\n    const window = getWindow.getWindow(document);\n    const clipboard = window.navigator.clipboard;\n    const items = [];\n    for(let i = 0; i < clipboardData.items.length; i++){\n        const dtItem = clipboardData.items[i];\n        const blob = DataTransfer.getBlobFromDataTransferItem(window, dtItem);\n        items.push(createClipboardItem(window, blob));\n    }\n    const written = clipboard && await clipboard.write(items).then(()=>true, // Can happen with other implementations that e.g. require permissions\n    /* istanbul ignore next */ ()=>false);\n    if (!written) {\n        throw new Error('The Clipboard API is unavailable.');\n    }\n}\nconst g = globalThis;\n/* istanbul ignore else */ if (typeof g.afterEach === 'function') {\n    g.afterEach(()=>resetClipboardStubOnView(globalThis.window));\n}\n/* istanbul ignore else */ if (typeof g.afterAll === 'function') {\n    g.afterAll(()=>detachClipboardStubFromView(globalThis.window));\n}\n\nexports.attachClipboardStubToView = attachClipboardStubToView;\nexports.createClipboardItem = createClipboardItem;\nexports.detachClipboardStubFromView = detachClipboardStubFromView;\nexports.readDataTransferFromClipboard = readDataTransferFromClipboard;\nexports.resetClipboardStubOnView = resetClipboardStubOnView;\nexports.writeDataTransferToClipboard = writeDataTransferToClipboard;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,SAAS,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC/C,IAAIC,IAAI,GAAGD,OAAO,CAAC,WAAW,CAAC;AAC/B,IAAIE,YAAY,GAAGF,OAAO,CAAC,mBAAmB,CAAC;;AAE/C;AACA,SAASG,gBAAgBA,CAACC,GAAG,EAAEC,GAAG,EAAEP,KAAK,EAAE;EACvC,IAAIO,GAAG,IAAID,GAAG,EAAE;IACZT,MAAM,CAACC,cAAc,CAACQ,GAAG,EAAEC,GAAG,EAAE;MAC5BP,KAAK,EAAEA,KAAK;MACZQ,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE;IACd,CAAC,CAAC;EACN,CAAC,MAAM;IACHJ,GAAG,CAACC,GAAG,CAAC,GAAGP,KAAK;EACpB;EACA,OAAOM,GAAG;AACd;AACA;AACA;AACA;AACA,SAASK,mBAAmBA,CAACC,MAAM,EAAE,GAAGC,KAAK,EAAE;EAC3C,MAAMC,OAAO,GAAGjB,MAAM,CAACkB,WAAW,CAACF,KAAK,CAACG,GAAG,CAAEC,CAAC,IAAG,CAC1C,OAAOA,CAAC,KAAK,QAAQ,GAAG,YAAY,GAAGA,CAAC,CAACC,IAAI,EAC7CC,OAAO,CAACC,OAAO,CAACH,CAAC,CAAC,CACrB,CAAC,CAAC;EACP;EACA;EAAyB,IAAI,OAAOL,MAAM,CAACS,aAAa,KAAK,WAAW,EAAE;IACtE,OAAO,IAAIT,MAAM,CAACS,aAAa,CAACP,OAAO,CAAC;EAC5C;EACA,OAAO,IAAI,MAAMO,aAAa,CAAC;IAC3B,IAAIC,KAAKA,CAAA,EAAG;MACR,OAAOC,KAAK,CAACC,IAAI,CAAC3B,MAAM,CAAC4B,IAAI,CAAC,IAAI,CAACC,IAAI,CAAC,CAAC;IAC7C;IACA,MAAMC,OAAOA,CAACT,IAAI,EAAE;MAChB,MAAMlB,KAAK,GAAG,MAAM,IAAI,CAAC0B,IAAI,CAACR,IAAI,CAAC;MACnC,IAAI,CAAClB,KAAK,EAAE;QACR,MAAM,IAAI4B,KAAK,CAAE,GAAEV,IAAK,uDAAsD,CAAC;MACnF;MACA,OAAOlB,KAAK,YAAYY,MAAM,CAACT,IAAI,GAAGH,KAAK,GAAG,IAAIY,MAAM,CAACT,IAAI,CAAC,CAC1DH,KAAK,CACR,EAAE;QACCkB;MACJ,CAAC,CAAC;IACN;IACAW,WAAWA,CAACC,CAAC,EAAC;MACVzB,gBAAgB,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;MACtC,IAAI,CAACqB,IAAI,GAAGI,CAAC;IACjB;EACJ,CAAC,CAAChB,OAAO,CAAC;AACd;AACA,MAAMiB,oBAAoB,GAAGC,MAAM,CAAC,qBAAqB,CAAC;AAC1D,SAASC,mBAAmBA,CAACrB,MAAM,EAAEsB,OAAO,EAAE;EAC1C,OAAOrC,MAAM,CAACsC,MAAM,CAAC,IAAI,MAAMC,SAAS,SAASxB,MAAM,CAACyB,WAAW,CAAC;IAChE,MAAMC,IAAIA,CAAA,EAAG;MACT,OAAOf,KAAK,CAACC,IAAI,CAAC,IAAI,CAACe,KAAK,CAAC;IACjC;IACA,MAAMC,QAAQA,CAAA,EAAG;MACb,IAAIC,IAAI,GAAG,EAAE;MACb,KAAK,MAAMC,IAAI,IAAI,IAAI,CAACH,KAAK,EAAC;QAC1B,MAAMrB,IAAI,GAAGwB,IAAI,CAACpB,KAAK,CAACqB,QAAQ,CAAC,YAAY,CAAC,GAAG,YAAY,GAAGD,IAAI,CAACpB,KAAK,CAACsB,IAAI,CAAEC,CAAC,IAAGA,CAAC,CAACC,UAAU,CAAC,OAAO,CAAC,CAAC;QAC3G,IAAI5B,IAAI,EAAE;UACNuB,IAAI,IAAI,MAAMC,IAAI,CAACf,OAAO,CAACT,IAAI,CAAC,CAAC6B,IAAI,CAAE9B,CAAC,IAAGd,IAAI,CAAC6C,YAAY,CAAC/B,CAAC,EAAEL,MAAM,CAACqC,UAAU,CAAC,CAAC;QACvF;MACJ;MACA,OAAOR,IAAI;IACf;IACA,MAAMS,KAAKA,CAACxB,IAAI,EAAE;MACd,IAAI,CAACa,KAAK,GAAGb,IAAI;IACrB;IACA,MAAMyB,SAASA,CAACV,IAAI,EAAE;MAClB,IAAI,CAACF,KAAK,GAAG,CACT5B,mBAAmB,CAACC,MAAM,EAAE6B,IAAI,CAAC,CACpC;IACL;IACAZ,WAAWA,CAAC,GAAGuB,IAAI,EAAC;MAChB,KAAK,CAAC,GAAGA,IAAI,CAAC;MACd/C,gBAAgB,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE,CAAC;IACvC;EACJ,CAAC,CAAC,CAAC,EAAE;IACD,CAAC0B,oBAAoB,GAAGG;EAC5B,CAAC,CAAC;AACN;AACA,SAASmB,eAAeA,CAACC,SAAS,EAAE;EAChC,OAAO,CAAC,EAAEA,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACvB,oBAAoB,CAAC,CAAC;AACpG;AACA,SAASwB,yBAAyBA,CAAC3C,MAAM,EAAE;EACvC,IAAIyC,eAAe,CAACzC,MAAM,CAAC4C,SAAS,CAACF,SAAS,CAAC,EAAE;IAC7C,OAAO1C,MAAM,CAAC4C,SAAS,CAACF,SAAS,CAACvB,oBAAoB,CAAC;EAC3D;EACA,MAAM0B,aAAa,GAAG5D,MAAM,CAAC6D,wBAAwB,CAAC9C,MAAM,CAAC4C,SAAS,EAAE,WAAW,CAAC;EACpF,IAAIG,IAAI;EACR,MAAMzB,OAAO,GAAG;IACZ0B,kBAAkB,EAAEA,CAAA,KAAI;MACpBD,IAAI,GAAG1B,mBAAmB,CAACrB,MAAM,EAAEsB,OAAO,CAAC;IAC/C,CAAC;IACD2B,mBAAmB,EAAEA,CAAA,KAAI;MACrB,wBAAyB,IAAIJ,aAAa,EAAE;QACxC5D,MAAM,CAACC,cAAc,CAACc,MAAM,CAAC4C,SAAS,EAAE,WAAW,EAAEC,aAAa,CAAC;MACvE,CAAC,MAAM;QACH5D,MAAM,CAACC,cAAc,CAACc,MAAM,CAAC4C,SAAS,EAAE,WAAW,EAAE;UACjDxD,KAAK,EAAE8D,SAAS;UAChBrD,YAAY,EAAE;QAClB,CAAC,CAAC;MACN;IACJ;EACJ,CAAC;EACDkD,IAAI,GAAG1B,mBAAmB,CAACrB,MAAM,EAAEsB,OAAO,CAAC;EAC3CrC,MAAM,CAACC,cAAc,CAACc,MAAM,CAAC4C,SAAS,EAAE,WAAW,EAAE;IACjDO,GAAG,EAAEA,CAAA,KAAIJ,IAAI;IACblD,YAAY,EAAE;EAClB,CAAC,CAAC;EACF,OAAOkD,IAAI,CAAC5B,oBAAoB,CAAC;AACrC;AACA,SAASiC,wBAAwBA,CAACpD,MAAM,EAAE;EACtC,IAAIyC,eAAe,CAACzC,MAAM,CAAC4C,SAAS,CAACF,SAAS,CAAC,EAAE;IAC7C1C,MAAM,CAAC4C,SAAS,CAACF,SAAS,CAACvB,oBAAoB,CAAC,CAAC6B,kBAAkB,CAAC,CAAC;EACzE;AACJ;AACA,SAASK,2BAA2BA,CAACrD,MAAM,EAAE;EACzC,IAAIyC,eAAe,CAACzC,MAAM,CAAC4C,SAAS,CAACF,SAAS,CAAC,EAAE;IAC7C1C,MAAM,CAAC4C,SAAS,CAACF,SAAS,CAACvB,oBAAoB,CAAC,CAAC8B,mBAAmB,CAAC,CAAC;EAC1E;AACJ;AACA,eAAeK,6BAA6BA,CAACC,QAAQ,EAAE;EACnD,MAAMvD,MAAM,GAAGuD,QAAQ,CAACC,WAAW;EACnC,MAAMd,SAAS,GAAG1C,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAAC4C,SAAS,CAACF,SAAS;EAC5F,MAAMf,KAAK,GAAGe,SAAS,KAAI,MAAMA,SAAS,CAAChB,IAAI,CAAC,CAAC;EACjD,IAAI,CAACC,KAAK,EAAE;IACR,MAAM,IAAIX,KAAK,CAAC,mCAAmC,CAAC;EACxD;EACA,MAAMyC,EAAE,GAAGjE,YAAY,CAACkE,kBAAkB,CAAC1D,MAAM,CAAC;EAClD,KAAK,MAAM8B,IAAI,IAAIH,KAAK,EAAC;IACrB,KAAK,MAAMrB,IAAI,IAAIwB,IAAI,CAACpB,KAAK,EAAC;MAC1B+C,EAAE,CAACE,OAAO,CAACrD,IAAI,EAAE,MAAMwB,IAAI,CAACf,OAAO,CAACT,IAAI,CAAC,CAAC6B,IAAI,CAAE9B,CAAC,IAAGd,IAAI,CAAC6C,YAAY,CAAC/B,CAAC,EAAEL,MAAM,CAACqC,UAAU,CAAC,CAAC,CAAC;IACjG;EACJ;EACA,OAAOoB,EAAE;AACb;AACA,eAAeG,4BAA4BA,CAACL,QAAQ,EAAEM,aAAa,EAAE;EACjE,MAAM7D,MAAM,GAAGX,SAAS,CAACA,SAAS,CAACkE,QAAQ,CAAC;EAC5C,MAAMb,SAAS,GAAG1C,MAAM,CAAC4C,SAAS,CAACF,SAAS;EAC5C,MAAMf,KAAK,GAAG,EAAE;EAChB,KAAI,IAAImC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,aAAa,CAAClC,KAAK,CAACoC,MAAM,EAAED,CAAC,EAAE,EAAC;IAC/C,MAAME,MAAM,GAAGH,aAAa,CAAClC,KAAK,CAACmC,CAAC,CAAC;IACrC,MAAMG,IAAI,GAAGzE,YAAY,CAAC0E,2BAA2B,CAAClE,MAAM,EAAEgE,MAAM,CAAC;IACrErC,KAAK,CAACwC,IAAI,CAACpE,mBAAmB,CAACC,MAAM,EAAEiE,IAAI,CAAC,CAAC;EACjD;EACA,MAAMG,OAAO,GAAG1B,SAAS,KAAI,MAAMA,SAAS,CAACJ,KAAK,CAACX,KAAK,CAAC,CAACQ,IAAI,CAAC,MAAI,IAAI;EAAE;EACzE;EAA2B,MAAI,KAAK,CAAC;EACrC,IAAI,CAACiC,OAAO,EAAE;IACV,MAAM,IAAIpD,KAAK,CAAC,mCAAmC,CAAC;EACxD;AACJ;AACA,MAAMqD,CAAC,GAAGC,UAAU;AACpB;AAA2B,IAAI,OAAOD,CAAC,CAACE,SAAS,KAAK,UAAU,EAAE;EAC9DF,CAAC,CAACE,SAAS,CAAC,MAAInB,wBAAwB,CAACkB,UAAU,CAACtE,MAAM,CAAC,CAAC;AAChE;AACA;AAA2B,IAAI,OAAOqE,CAAC,CAACG,QAAQ,KAAK,UAAU,EAAE;EAC7DH,CAAC,CAACG,QAAQ,CAAC,MAAInB,2BAA2B,CAACiB,UAAU,CAACtE,MAAM,CAAC,CAAC;AAClE;AAEAb,OAAO,CAACwD,yBAAyB,GAAGA,yBAAyB;AAC7DxD,OAAO,CAACY,mBAAmB,GAAGA,mBAAmB;AACjDZ,OAAO,CAACkE,2BAA2B,GAAGA,2BAA2B;AACjElE,OAAO,CAACmE,6BAA6B,GAAGA,6BAA6B;AACrEnE,OAAO,CAACiE,wBAAwB,GAAGA,wBAAwB;AAC3DjE,OAAO,CAACyE,4BAA4B,GAAGA,4BAA4B"}