{"version":3,"names":["Object","defineProperty","exports","value","getTargetTypeAndSelection","require","getInputRange","focusNode","typeAndSelection","type","selection","_typeAndSelection_selection","getRangeAt"],"sources":["getInputRange.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar getTargetTypeAndSelection = require('./getTargetTypeAndSelection.js');\n\n/**\n * Get the range that would be overwritten by input.\n */ function getInputRange(focusNode) {\n    const typeAndSelection = getTargetTypeAndSelection.getTargetTypeAndSelection(focusNode);\n    if (typeAndSelection.type === 'input') {\n        return typeAndSelection.selection;\n    } else if (typeAndSelection.type === 'contenteditable') {\n        var _typeAndSelection_selection;\n        // Multi-range on contenteditable edits the first selection instead of the last\n        return (_typeAndSelection_selection = typeAndSelection.selection) === null || _typeAndSelection_selection === void 0 ? void 0 : _typeAndSelection_selection.getRangeAt(0);\n    }\n}\n\nexports.getInputRange = getInputRange;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,yBAAyB,GAAGC,OAAO,CAAC,gCAAgC,CAAC;;AAEzE;AACA;AACA;AAAI,SAASC,aAAaA,CAACC,SAAS,EAAE;EAClC,MAAMC,gBAAgB,GAAGJ,yBAAyB,CAACA,yBAAyB,CAACG,SAAS,CAAC;EACvF,IAAIC,gBAAgB,CAACC,IAAI,KAAK,OAAO,EAAE;IACnC,OAAOD,gBAAgB,CAACE,SAAS;EACrC,CAAC,MAAM,IAAIF,gBAAgB,CAACC,IAAI,KAAK,iBAAiB,EAAE;IACpD,IAAIE,2BAA2B;IAC/B;IACA,OAAO,CAACA,2BAA2B,GAAGH,gBAAgB,CAACE,SAAS,MAAM,IAAI,IAAIC,2BAA2B,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,2BAA2B,CAACC,UAAU,CAAC,CAAC,CAAC;EAC7K;AACJ;AAEAV,OAAO,CAACI,aAAa,GAAGA,aAAa"}