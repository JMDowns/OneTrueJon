cf67641a8793ebabcf626b92966e5b47
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
var UI = require('../../document/UI.js');
require('../../utils/click/isClickableInput.js');
require('../../utils/dataTransfer/Clipboard.js');
var isContentEditable = require('../../utils/edit/isContentEditable.js');
require('../../utils/edit/isEditable.js');
require('../../utils/edit/maxLength.js');
require('@testing-library/dom/dist/helpers.js');
var selection = require('../../utils/focus/selection.js');
require('../../utils/keyDef/readNextDescriptor.js');
require('../../utils/misc/level.js');
require('../../options.js');
var setSelection = require('./setSelection.js');

/**
 * Expand a selection like the browser does when pressing Ctrl+A.
 */
function selectAll(target) {
  if (selection.hasOwnSelection(target)) {
    return setSelection.setSelection({
      focusNode: target,
      anchorOffset: 0,
      focusOffset: UI.getUIValue(target).length
    });
  }
  var _getContentEditable;
  const focusNode = (_getContentEditable = isContentEditable.getContentEditable(target)) !== null && _getContentEditable !== void 0 ? _getContentEditable : target.ownerDocument.body;
  setSelection.setSelection({
    focusNode,
    anchorOffset: 0,
    focusOffset: focusNode.childNodes.length
  });
}
function isAllSelected(target) {
  if (selection.hasOwnSelection(target)) {
    return UI.getUISelection(target).startOffset === 0 && UI.getUISelection(target).endOffset === UI.getUIValue(target).length;
  }
  var _getContentEditable;
  const focusNode = (_getContentEditable = isContentEditable.getContentEditable(target)) !== null && _getContentEditable !== void 0 ? _getContentEditable : target.ownerDocument.body;
  const selection$1 = target.ownerDocument.getSelection();
  return (selection$1 === null || selection$1 === void 0 ? void 0 : selection$1.anchorNode) === focusNode && selection$1.focusNode === focusNode && selection$1.anchorOffset === 0 && selection$1.focusOffset === focusNode.childNodes.length;
}
exports.isAllSelected = isAllSelected;
exports.selectAll = selectAll;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlVJIiwicmVxdWlyZSIsImlzQ29udGVudEVkaXRhYmxlIiwic2VsZWN0aW9uIiwic2V0U2VsZWN0aW9uIiwic2VsZWN0QWxsIiwidGFyZ2V0IiwiaGFzT3duU2VsZWN0aW9uIiwiZm9jdXNOb2RlIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNPZmZzZXQiLCJnZXRVSVZhbHVlIiwibGVuZ3RoIiwiX2dldENvbnRlbnRFZGl0YWJsZSIsImdldENvbnRlbnRFZGl0YWJsZSIsIm93bmVyRG9jdW1lbnQiLCJib2R5IiwiY2hpbGROb2RlcyIsImlzQWxsU2VsZWN0ZWQiLCJnZXRVSVNlbGVjdGlvbiIsInN0YXJ0T2Zmc2V0IiwiZW5kT2Zmc2V0Iiwic2VsZWN0aW9uJDEiLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JOb2RlIl0sInNvdXJjZXMiOlsic2VsZWN0QWxsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxudmFyIFVJID0gcmVxdWlyZSgnLi4vLi4vZG9jdW1lbnQvVUkuanMnKTtcbnJlcXVpcmUoJy4uLy4uL3V0aWxzL2NsaWNrL2lzQ2xpY2thYmxlSW5wdXQuanMnKTtcbnJlcXVpcmUoJy4uLy4uL3V0aWxzL2RhdGFUcmFuc2Zlci9DbGlwYm9hcmQuanMnKTtcbnZhciBpc0NvbnRlbnRFZGl0YWJsZSA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL2VkaXQvaXNDb250ZW50RWRpdGFibGUuanMnKTtcbnJlcXVpcmUoJy4uLy4uL3V0aWxzL2VkaXQvaXNFZGl0YWJsZS5qcycpO1xucmVxdWlyZSgnLi4vLi4vdXRpbHMvZWRpdC9tYXhMZW5ndGguanMnKTtcbnJlcXVpcmUoJ0B0ZXN0aW5nLWxpYnJhcnkvZG9tL2Rpc3QvaGVscGVycy5qcycpO1xudmFyIHNlbGVjdGlvbiA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL2ZvY3VzL3NlbGVjdGlvbi5qcycpO1xucmVxdWlyZSgnLi4vLi4vdXRpbHMva2V5RGVmL3JlYWROZXh0RGVzY3JpcHRvci5qcycpO1xucmVxdWlyZSgnLi4vLi4vdXRpbHMvbWlzYy9sZXZlbC5qcycpO1xucmVxdWlyZSgnLi4vLi4vb3B0aW9ucy5qcycpO1xudmFyIHNldFNlbGVjdGlvbiA9IHJlcXVpcmUoJy4vc2V0U2VsZWN0aW9uLmpzJyk7XG5cbi8qKlxuICogRXhwYW5kIGEgc2VsZWN0aW9uIGxpa2UgdGhlIGJyb3dzZXIgZG9lcyB3aGVuIHByZXNzaW5nIEN0cmwrQS5cbiAqLyBmdW5jdGlvbiBzZWxlY3RBbGwodGFyZ2V0KSB7XG4gICAgaWYgKHNlbGVjdGlvbi5oYXNPd25TZWxlY3Rpb24odGFyZ2V0KSkge1xuICAgICAgICByZXR1cm4gc2V0U2VsZWN0aW9uLnNldFNlbGVjdGlvbih7XG4gICAgICAgICAgICBmb2N1c05vZGU6IHRhcmdldCxcbiAgICAgICAgICAgIGFuY2hvck9mZnNldDogMCxcbiAgICAgICAgICAgIGZvY3VzT2Zmc2V0OiBVSS5nZXRVSVZhbHVlKHRhcmdldCkubGVuZ3RoXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB2YXIgX2dldENvbnRlbnRFZGl0YWJsZTtcbiAgICBjb25zdCBmb2N1c05vZGUgPSAoX2dldENvbnRlbnRFZGl0YWJsZSA9IGlzQ29udGVudEVkaXRhYmxlLmdldENvbnRlbnRFZGl0YWJsZSh0YXJnZXQpKSAhPT0gbnVsbCAmJiBfZ2V0Q29udGVudEVkaXRhYmxlICE9PSB2b2lkIDAgPyBfZ2V0Q29udGVudEVkaXRhYmxlIDogdGFyZ2V0Lm93bmVyRG9jdW1lbnQuYm9keTtcbiAgICBzZXRTZWxlY3Rpb24uc2V0U2VsZWN0aW9uKHtcbiAgICAgICAgZm9jdXNOb2RlLFxuICAgICAgICBhbmNob3JPZmZzZXQ6IDAsXG4gICAgICAgIGZvY3VzT2Zmc2V0OiBmb2N1c05vZGUuY2hpbGROb2Rlcy5sZW5ndGhcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGlzQWxsU2VsZWN0ZWQodGFyZ2V0KSB7XG4gICAgaWYgKHNlbGVjdGlvbi5oYXNPd25TZWxlY3Rpb24odGFyZ2V0KSkge1xuICAgICAgICByZXR1cm4gVUkuZ2V0VUlTZWxlY3Rpb24odGFyZ2V0KS5zdGFydE9mZnNldCA9PT0gMCAmJiBVSS5nZXRVSVNlbGVjdGlvbih0YXJnZXQpLmVuZE9mZnNldCA9PT0gVUkuZ2V0VUlWYWx1ZSh0YXJnZXQpLmxlbmd0aDtcbiAgICB9XG4gICAgdmFyIF9nZXRDb250ZW50RWRpdGFibGU7XG4gICAgY29uc3QgZm9jdXNOb2RlID0gKF9nZXRDb250ZW50RWRpdGFibGUgPSBpc0NvbnRlbnRFZGl0YWJsZS5nZXRDb250ZW50RWRpdGFibGUodGFyZ2V0KSkgIT09IG51bGwgJiYgX2dldENvbnRlbnRFZGl0YWJsZSAhPT0gdm9pZCAwID8gX2dldENvbnRlbnRFZGl0YWJsZSA6IHRhcmdldC5vd25lckRvY3VtZW50LmJvZHk7XG4gICAgY29uc3Qgc2VsZWN0aW9uJDEgPSB0YXJnZXQub3duZXJEb2N1bWVudC5nZXRTZWxlY3Rpb24oKTtcbiAgICByZXR1cm4gKHNlbGVjdGlvbiQxID09PSBudWxsIHx8IHNlbGVjdGlvbiQxID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzZWxlY3Rpb24kMS5hbmNob3JOb2RlKSA9PT0gZm9jdXNOb2RlICYmIHNlbGVjdGlvbiQxLmZvY3VzTm9kZSA9PT0gZm9jdXNOb2RlICYmIHNlbGVjdGlvbiQxLmFuY2hvck9mZnNldCA9PT0gMCAmJiBzZWxlY3Rpb24kMS5mb2N1c09mZnNldCA9PT0gZm9jdXNOb2RlLmNoaWxkTm9kZXMubGVuZ3RoO1xufVxuXG5leHBvcnRzLmlzQWxsU2VsZWN0ZWQgPSBpc0FsbFNlbGVjdGVkO1xuZXhwb3J0cy5zZWxlY3RBbGwgPSBzZWxlY3RBbGw7XG4iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBRVpBLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDQyxPQUFPLEVB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