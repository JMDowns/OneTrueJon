997b48df62b65e0aff3649264b5c3ab1
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
const parseInt = globalThis.parseInt;
function buildTimeValue(value) {
  const onlyDigitsValue = value.replace(/\D/g, '');
  if (onlyDigitsValue.length < 2) {
    return value;
  }
  const firstDigit = parseInt(onlyDigitsValue[0], 10);
  const secondDigit = parseInt(onlyDigitsValue[1], 10);
  if (firstDigit >= 3 || firstDigit === 2 && secondDigit >= 4) {
    let index;
    if (firstDigit >= 3) {
      index = 1;
    } else {
      index = 2;
    }
    return build(onlyDigitsValue, index);
  }
  if (value.length === 2) {
    return value;
  }
  return build(onlyDigitsValue, 2);
}
function build(onlyDigitsValue, index) {
  const hours = onlyDigitsValue.slice(0, index);
  const validHours = Math.min(parseInt(hours, 10), 23);
  const minuteCharacters = onlyDigitsValue.slice(index);
  const parsedMinutes = parseInt(minuteCharacters, 10);
  const validMinutes = Math.min(parsedMinutes, 59);
  return `${validHours.toString().padStart(2, '0')}:${validMinutes.toString().padStart(2, '0')}`;
}
function isValidDateOrTimeValue(element, value) {
  const clone = element.cloneNode();
  clone.value = value;
  return clone.value === value;
}
exports.buildTimeValue = buildTimeValue;
exports.isValidDateOrTimeValue = isValidDateOrTimeValue;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInBhcnNlSW50IiwiZ2xvYmFsVGhpcyIsImJ1aWxkVGltZVZhbHVlIiwib25seURpZ2l0c1ZhbHVlIiwicmVwbGFjZSIsImxlbmd0aCIsImZpcnN0RGlnaXQiLCJzZWNvbmREaWdpdCIsImluZGV4IiwiYnVpbGQiLCJob3VycyIsInNsaWNlIiwidmFsaWRIb3VycyIsIk1hdGgiLCJtaW4iLCJtaW51dGVDaGFyYWN0ZXJzIiwicGFyc2VkTWludXRlcyIsInZhbGlkTWludXRlcyIsInRvU3RyaW5nIiwicGFkU3RhcnQiLCJpc1ZhbGlkRGF0ZU9yVGltZVZhbHVlIiwiZWxlbWVudCIsImNsb25lIiwiY2xvbmVOb2RlIl0sInNvdXJjZXMiOlsidGltZVZhbHVlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuY29uc3QgcGFyc2VJbnQgPSBnbG9iYWxUaGlzLnBhcnNlSW50O1xuZnVuY3Rpb24gYnVpbGRUaW1lVmFsdWUodmFsdWUpIHtcbiAgICBjb25zdCBvbmx5RGlnaXRzVmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9cXEQvZywgJycpO1xuICAgIGlmIChvbmx5RGlnaXRzVmFsdWUubGVuZ3RoIDwgMikge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIGNvbnN0IGZpcnN0RGlnaXQgPSBwYXJzZUludChvbmx5RGlnaXRzVmFsdWVbMF0sIDEwKTtcbiAgICBjb25zdCBzZWNvbmREaWdpdCA9IHBhcnNlSW50KG9ubHlEaWdpdHNWYWx1ZVsxXSwgMTApO1xuICAgIGlmIChmaXJzdERpZ2l0ID49IDMgfHwgZmlyc3REaWdpdCA9PT0gMiAmJiBzZWNvbmREaWdpdCA+PSA0KSB7XG4gICAgICAgIGxldCBpbmRleDtcbiAgICAgICAgaWYgKGZpcnN0RGlnaXQgPj0gMykge1xuICAgICAgICAgICAgaW5kZXggPSAxO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaW5kZXggPSAyO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBidWlsZChvbmx5RGlnaXRzVmFsdWUsIGluZGV4KTtcbiAgICB9XG4gICAgaWYgKHZhbHVlLmxlbmd0aCA9PT0gMikge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIHJldHVybiBidWlsZChvbmx5RGlnaXRzVmFsdWUsIDIpO1xufVxuZnVuY3Rpb24gYnVpbGQob25seURpZ2l0c1ZhbHVlLCBpbmRleCkge1xuICAgIGNvbnN0IGhvdXJzID0gb25seURpZ2l0c1ZhbHVlLnNsaWNlKDAsIGluZGV4KTtcbiAgICBjb25zdCB2YWxpZEhvdXJzID0gTWF0aC5taW4ocGFyc2VJbnQoaG91cnMsIDEwKSwgMjMpO1xuICAgIGNvbnN0IG1pbnV0ZUNoYXJhY3RlcnMgPSBvbmx5RGlnaXRzVmFsdWUuc2xpY2UoaW5kZXgpO1xuICAgIGNvbnN0IHBhcnNlZE1pbnV0ZXMgPSBwYXJzZUludChtaW51dGVDaGFyYWN0ZXJzLCAxMCk7XG4gICAgY29uc3QgdmFsaWRNaW51dGVzID0gTWF0aC5taW4ocGFyc2VkTWludXRlcywgNTkpO1xuICAgIHJldHVybiBgJHt2YWxpZEhvdXJzLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKX06JHt2YWxpZE1pbnV0ZXMudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfWA7XG59XG5mdW5jdGlvbiBpc1ZhbGlkRGF0ZU9yVGltZVZhbHVlKGVsZW1lbnQsIHZhbHVlKSB7XG4gICAgY29uc3QgY2xvbmUgPSBlbGVtZW50LmNsb25lTm9kZSgpO1xuICAgIGNsb25lLnZhbHVlID0gdmFsdWU7XG4gICAgcmV0dXJuIGNsb25lLnZhbHVlID09PSB2YWx1ZTtcbn1cblxuZXhwb3J0cy5idWlsZFRpbWVWYWx1ZSA9IGJ1aWxkVGltZVZhbHVlO1xuZXhwb3J0cy5pc1ZhbGlk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